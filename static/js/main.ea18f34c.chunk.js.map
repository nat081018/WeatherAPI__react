{"version":3,"sources":["responsive.styles/Device.js","components/searchCity/SearchCity.jsx","components/appTitle/AppTitle.jsx","responsive.styles/Text.js","responsive.styles/LittelLabel.js","resultFadein.js","components/notFound/NotFound.jsx","responsive.styles/ForecastHour.js","responsive.styles/BigLabel.js","responsive.styles/MediumLabel.js","components/result/Result.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SearchWrapper","styled","form","showResult","SearchInput","input","SearchIcon","span","SearchCity","submit","value","change","onSubmit","type","placeholder","onChange","icon","faSearch","AppTitle","h1","showLabel","secondary","Text","color","fontSize","align","firstToUpperCase","LittelLabel","h4","weight","aling","ResultFadeIn","keyframes","NotFoundWrapper","div","NotfoundIcon","NotFoundText","NotFound","faFrown","ForecastWrapper","WeatherIcon","img","ForecastHour","props","temp","month","day","hour","iconUrl","src","BigLabel","h2","MediumLabel","h3","Results","LocationWrapper","CurrentWeatherWrapper","TemperatureWrapper","Temperature","WeatherDetailsWrapper","WeatherDetail","Forecast","Result","weather","city","country","date","description","main","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","forecasts","forecast","map","item","key","dt","Math","floor","dt_txt","slice","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","ContainerWrapper","App","state","weatherInfo","error","handleInputChange","e","setState","target","handleSearchCity","preventDefault","APIkey","process","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","currentDate","Date","getDay","getDate","getMonth","sys","toLocaleTimeString","name","temp_max","temp_min","clouds","speed","list","catch","console","log","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea18f34c.chunk.js","sourcesContent":["const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '525px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px',\r\n};\r\n\r\nconst device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n\r\nexport default device;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport device from '../../responsive.styles/Device.js';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SearchWrapper = styled.form`\r\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\r\n  position: relative;\r\n  margin: 0 auto;\r\n  max-width: 500px;\r\n  transition: 0.8s 0.5s;\r\n  @media ${device.laptopL} {\r\n    max-width: 600px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    max-width: 700px;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  background-color: #ffffff;\r\n  font-size: 16px;\r\n  padding: 10px 15px 10px 40px;\r\n  color: #c5c5c5;\r\n  transition: 0.2s;\r\n  border-radius: 20px;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n  &:focus {\r\n    color: #191919;\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    outline: none;\r\n  }\r\n  @media ${device.tablet} {\r\n    font-size: 18px;\r\n  }\r\n  @media ${device.laptop} {\r\n    padding: 15px 20px 15px 45px;\r\n    border-radius: 30px;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled.span`\r\n  display: block;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 22px;\r\n  transform: translate(-50%, -50%);\r\n  height: 14px;\r\n  width: 14px;\r\n  font-size: 14px;\r\n  color: #c5c5c5;\r\n  @media ${device.tablet} {\r\n    height: 15px;\r\n    width: 15px;\r\n    font-size: 15px;\r\n  }\r\n  @media ${device.laptop} {\r\n    height: 16px;\r\n    width: 16px;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst SearchCity = ({ showResult, submit, value, change }) => {\r\n  return (\r\n    <>\r\n      <SearchWrapper showResult={showResult} onSubmit={submit}>\r\n        <SearchInput type=\"text\" value={value} placeholder=\"Enter city\" onChange={change} />\r\n        <SearchIcon>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n        </SearchIcon>\r\n      </SearchWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nSearchCity.propTypes = {\r\n  showResult: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  change: PropTypes.func.isRequired,\r\n};\r\nexport default SearchCity;\r\n","import React, { Component } from 'react';\r\nimport device from '../../responsive.styles/Device.js';\r\nimport styled from 'styled-components';\r\n\r\nconst AppTitle = styled.h1`\r\n  display: block;\r\n  height: 64px;\r\n  margin: 0;\r\n  padding: 20px 0;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n  transition: 0.3s 1.4s;\r\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\r\n  ${({ secondary }) =>\r\n    secondary &&\r\n    `\r\n    opacity: 1;\r\n    height: auto;\r\n    position: relative;\r\n    padding: 20px 0;\r\n    font-size: 30px;\r\n    top: 20%;\r\n    text-align: center;\r\n    transition: .5s;\r\n    @media ${device.tablet} {\r\n      font-size: 40px;\r\n    }\r\n    @media ${device.laptop} {\r\n      font-size: 50px;\r\n    }\r\n    @media ${device.laptopL} {\r\n      font-size: 60px;\r\n    }\r\n    @media ${device.desktop} {\r\n      font-size: 70px;\r\n    }\r\n    \r\n  `}\r\n  ${({ showResult }) =>\r\n    showResult &&\r\n    `\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    top: 10%;\r\n  `}\r\n`;\r\n\r\nexport default AppTitle;\r\n","import styled from 'styled-components';\r\nimport device from './Device.js';\r\n\r\nconst Text = styled.span`\r\ncolor: ${({ color }) => color || '#FFFFFF'};\r\ndisplay: block;\r\nfont-size: ${({ fontSize }) => fontSize || '12px'};\r\ntext-align: ${align => align || 'left'};\r\n${({ firstToUpperCase }) =>\r\n  firstToUpperCase &&\r\n  `&:first-letter {\r\n    text-transform: uppercase;\r\n}\r\n`}\r\n    @media ${device.tablet} {\r\n        font-size: ${({ fontSize }) => fontSize || '15px'}\r\n    }\r\n\r\n    @media ${device.laptop} {\r\n        font-size: ${({ fontSize }) => fontSize || '17px'}\r\n    }\r\n\r\n    @amedia ${device.laptopL} {\r\n        font-size: ${({ fontSize }) => fontSize || '19px'}\r\n    }\r\n`;\r\n\r\nexport default Text;\r\n","import styled from 'styled-components';\r\nimport device from './Device.js';\r\n\r\nconst LittelLabel = styled.h4`\r\ncolor: ${({ color }) => color || '#FFFFFF'};\r\nfont-size: ${({ fontSize }) => fontSize || '15px'};\r\nfont-weight: ${weight => weight || '600'};\r\ntext-aling: ${({ aling }) => aling || 'left'};\r\npadding: 5px 0;\r\n${({ firstToUpperCase }) =>\r\n  firstToUpperCase &&\r\n  `\r\n    &:first-letter {\r\n        text-transform: uppercase;\r\n    }\r\n    `}\r\n@media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '20px'}\r\n}\r\n@media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '23px'}\r\n}\r\n@media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '26px'}\r\n}\r\n\r\n\r\n`;\r\n\r\nexport default LittelLabel;\r\n","import { keyframes } from 'styled-components';\r\n\r\nconst ResultFadeIn = keyframes`\r\n  to {\r\n    opacity: 1;\r\n        visibility: visible;\r\n        top: 0;\r\n  }\r\n`;\r\n\r\nexport default ResultFadeIn;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport device from '../../responsive.styles/Device.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\r\nimport ResultFadeIn from '../../resultFadein.js';\r\n\r\nconst NotFoundWrapper = styled.div`\r\n  max-width: 600px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 100px auto 0;\r\n  padding: 20px;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  top: 20px;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  border-radius: 10px;\r\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\r\n`;\r\n\r\nconst NotfoundIcon = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  font-size: 40px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst NotFoundText = styled.span`\r\n  color: #ffffff;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <NotFoundWrapper>\r\n      <NotfoundIcon>\r\n        <FontAwesomeIcon icon={faFrown} />\r\n      </NotfoundIcon>\r\n      <NotFoundText>Sorry, the specified city was not found..</NotFoundText>\r\n    </NotFoundWrapper>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport device from './Device.js';\r\nimport Text from './Text.js';\r\nimport LittelLabel from './LittelLabel.js';\r\n\r\nconst ForecastWrapper = styled.div`\r\n  flex-shrink: 0;\r\n  flex-basis: 90px;\r\n  padding: 10px;\r\n  margin: 0 5px;\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  &:first-child {\r\n    margin-left: 0;\r\n  }\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n  @media ${device.tablet} {\r\n    flex-basis: 110px;\r\n  }\r\n  @media ${device.laptop} {\r\n    flex-basis: 125px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    flex-basis: 140px;\r\n  }\r\n`;\r\n\r\nconst WeatherIcon = styled.img`\r\n  display: block;\r\n  height: 50px;\r\n  width: 50px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ForecastHour = props => {\r\n  const { temp, month, day, hour, icon } = props;\r\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n\r\n  return (\r\n    <ForecastWrapper>\r\n      <Text align=\"center\">\r\n        {month}.{day}\r\n      </Text>\r\n      <Text align=\"center\">{hour}:00</Text>\r\n      <WeatherIcon src={iconUrl} />\r\n      <LittelLabel align=\"center\" weight=\"400\">\r\n        {temp}&#176;\r\n      </LittelLabel>\r\n    </ForecastWrapper>\r\n  );\r\n};\r\n\r\nForecastHour.propTypes = {\r\n  temp: PropTypes.number.isRequired,\r\n  month: PropTypes.string.isRequired,\r\n  day: PropTypes.string.isRequired,\r\n  hour: PropTypes.number.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ForecastHour;\r\n","import styled from 'styled-components';\r\nimport device from './Device.js';\r\n\r\nconst BigLabel = styled.h2`\r\n  color: ${({ color }) => color || '#FFFFFF'};\r\n  display: block;\r\n  font-weight: ${({ weight }) => weight || '600'};\r\n  font-size: ${({ fontSize }) => fontSize || '30px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  padding: 5px 0;\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '37px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '43px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '52px'};\r\n  } \r\n`;\r\n\r\nexport default BigLabel;\r\n","import styled from 'styled-components';\r\nimport device from './Device';\r\nconst MediumLabel = styled.h3`\r\n  color: ${({ color }) => color || '#FFFFFF'};\r\n  display: block;\r\n  font-weight: ${({ weight }) => weight || '600'};\r\n  font-size: ${({ fontSize }) => fontSize || '20px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  padding: 5px 0;\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '23px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '26px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '29px'};\r\n  }\r\n`;\r\n\r\nexport default MediumLabel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCloud,\r\n  faBolt,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faSnowflake,\r\n  faSun,\r\n  faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport styled from 'styled-components';\r\nimport device from '../../responsive.styles/Device.js';\r\nimport ForecastHour from '../../responsive.styles/ForecastHour.js';\r\nimport ResultFadeIn from '../../resultFadein.js';\r\nimport BigLabel from '../../responsive.styles/BigLabel.js';\r\nimport MediumLabel from '../../responsive.styles/MediumLabel.js';\r\nimport LittelLabel from '../../responsive.styles/LittelLabel.js';\r\nimport Text from '../../responsive.styles/Text.js';\r\n\r\nconst Results = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  padding: 40px 0;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  position: relative;\r\n  top: 20px;\r\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\r\n`;\r\n\r\nconst LocationWrapper = styled.div`\r\n  flex-basis: 100%;\r\n`;\r\n\r\nconst CurrentWeatherWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-template-columns: auto 1fr;\r\n  margin: 20px 0;\r\n  grid-gap: 30px;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n    padding-right: 10px;\r\n  }\r\n  @media ${device.tablet} {\r\n    grid-template-columns: 1fr 1fr;\r\n    padding-right: 20px;\r\n  }\r\n`;\r\n\r\nconst WeatherIcon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 70px;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 100px;\r\n    justify-content: flex-end;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 120px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 140px;\r\n  }\r\n`;\r\n\r\nconst TemperatureWrapper = styled.div``;\r\n\r\nconst Temperature = styled.h3`\r\n  display: block;\r\n  font-size: 50px;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n  @media ${device.tablet} {\r\n    font-size: 70px;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 90px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 110px;\r\n  }\r\n`;\r\n\r\nconst WeatherDetailsWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 10px 0;\r\n  margin: 20px 0;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  align-self: flex-start;\r\n  @media ${device.mobileL} {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nconst WeatherDetail = styled.div`\r\n  flex-basis: calc(100% / 3);\r\n  padding: 10px;\r\n  @media ${device.laptop} {\r\n    padding: 20px 10px;\r\n  }\r\n`;\r\n\r\nconst ForecastWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  margin: 20px 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Forecast = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  scrollbar-color: lightgray #ffffff;\r\n  scrollbar-width: thin;\r\n  margin-top: 20px;\r\n  padding-bottom: 20px;\r\n  @media ${device.laptop} {\r\n    order: 4;\r\n  }\r\n`;\r\n\r\nconst Result = ({ weather }) => {\r\n  const {\r\n    city,\r\n    country,\r\n    date,\r\n    description,\r\n    main,\r\n    temp,\r\n    sunset,\r\n    sunrise,\r\n    humidity,\r\n    wind,\r\n    highestTemp,\r\n    lowestTemp,\r\n    forecast,\r\n  } = weather;\r\n\r\n  const forecasts = forecast.map(item => (\r\n    <ForecastHour\r\n      key={item.dt}\r\n      temp={Math.floor(item.main.temp * 1) / 1}\r\n      icon={item.weather[0].icon}\r\n      month={item.dt_txt.slice(5, 7)}\r\n      day={item.dt_txt.slice(8, 10)}\r\n      hour={item.dt_txt.slice(11, 13) * 1}\r\n    />\r\n  ));\r\n\r\n  let weatherIcon = null;\r\n\r\n  if (main === 'Thunderstorm') {\r\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n  } else if (main === 'Drizzle') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n  } else if (main === 'Rain') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n  } else if (main === 'Snow') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\r\n  } else if (main === 'Clear') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\r\n  } else if (main === 'Clouds') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\r\n  } else {\r\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n  }\r\n\r\n  return (\r\n    <Results>\r\n      <LocationWrapper>\r\n        <BigLabel>\r\n          {city}, {country}\r\n        </BigLabel>\r\n        <LittelLabel weight=\"400\">{date}</LittelLabel>\r\n      </LocationWrapper>\r\n      <CurrentWeatherWrapper>\r\n        <WeatherIcon>{weatherIcon}</WeatherIcon>\r\n        <TemperatureWrapper>\r\n          <Temperature>{Math.floor(temp)}&#176;</Temperature>\r\n          <LittelLabel weight=\"400\" firstToUpperCase>\r\n            {description}\r\n          </LittelLabel>\r\n        </TemperatureWrapper>\r\n      </CurrentWeatherWrapper>\r\n      <WeatherDetailsWrapper>\r\n        <WeatherDetail>\r\n          <LittelLabel align=\"center\" weight=\"400\">\r\n            {Math.floor(highestTemp)}&#176;\r\n          </LittelLabel>\r\n          <Text align=\"center\">Hight</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <LittelLabel align=\"center\" weight=\"400\">\r\n            {wind}mph\r\n          </LittelLabel>\r\n          <Text align=\"center\">Wind</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <LittelLabel align=\"center\" weight=\"400\">\r\n            {sunrise}\r\n          </LittelLabel>\r\n          <Text align=\"center\">Sunrise</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <LittelLabel align=\"center\" weight=\"400\">\r\n            {Math.floor(lowestTemp)}&#176;\r\n          </LittelLabel>\r\n          <Text align=\"center\">Low</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <LittelLabel align=\"center\" weight=\"400\">\r\n            {humidity}%\r\n          </LittelLabel>\r\n          <Text align=\"center\">Rain</Text>\r\n        </WeatherDetail>\r\n        <WeatherDetail>\r\n          <LittelLabel align=\"center\" weight=\"400\">\r\n            {sunset}\r\n          </LittelLabel>\r\n          <Text align=\"center\">Sunset</Text>\r\n        </WeatherDetail>\r\n      </WeatherDetailsWrapper>\r\n      <ForecastWrapper>\r\n        <MediumLabel weight=\"400\">Forecast</MediumLabel>\r\n        <Forecast>{forecasts}</Forecast>\r\n      </ForecastWrapper>\r\n    </Results>\r\n  );\r\n};\r\n\r\nResult.propTypes = {\r\n  weather: PropTypes.shape({\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    date: PropTypes.string,\r\n    description: PropTypes.string,\r\n    main: PropTypes.string,\r\n    temp: PropTypes.number,\r\n    sunrise: PropTypes.string,\r\n    sunset: PropTypes.string,\r\n    humidity: PropTypes.number,\r\n    wind: PropTypes.number,\r\n    highestTemp: PropTypes.number,\r\n    lowestTemp: PropTypes.number,\r\n    forecast: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchCity from './searchCity/SearchCity.jsx';\r\nimport AppTitle from './appTitle/AppTitle.jsx';\r\nimport Text from '../responsive.styles/Text.js';\r\nimport LittelLabel from '../responsive.styles/LittelLabel.js';\r\nimport NotFound from './notFound/NotFound.jsx';\r\nimport device from '../responsive.styles/Device.js';\r\nimport Result from './result/Result.jsx';\r\n\r\nconst ContainerWrapper = styled.div`\r\n  max-width: 1500px;\r\n  margin: 0 auto;\r\n  height: calc(100vh - 64px);\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    value: '',\r\n    weatherInfo: null,\r\n    error: false,\r\n  };\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSearchCity = e => {\r\n    e.preventDefault();\r\n    const { value } = this.state;\r\n\r\n    const APIkey = process.env.REACT_APP_API_KEY;\r\n\r\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\r\n\r\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\r\n\r\n    Promise.all([fetch(weather), fetch(forecast)])\r\n      .then(([res1, res2]) => {\r\n        if (res1.ok && res2.ok) {\r\n          return Promise.all([res1.json(), res2.json()]);\r\n        }\r\n        throw Error(res1.statusText, res2.statusText);\r\n      })\r\n      .then(([data1, data2]) => {\r\n        const months = [\r\n          'January',\r\n          'February',\r\n          'March',\r\n          'April',\r\n          'May',\r\n          'June',\r\n          'July',\r\n          'August',\r\n          'September',\r\n          'October',\r\n          'Nocvember',\r\n          'December',\r\n        ];\r\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        const currentDate = new Date();\r\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\r\n          months[currentDate.getMonth()]\r\n        } `;\r\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\r\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\r\n\r\n        const weatherInfo = {\r\n          city: data1.name,\r\n          country: data1.sys.country,\r\n          date,\r\n          description: data1.weather[0].description,\r\n          main: data1.weather[0].main,\r\n          temp: data1.main.temp,\r\n          highestTemp: data1.main.temp_max,\r\n          lowestTemp: data1.main.temp_min,\r\n          sunrise,\r\n          sunset,\r\n          clouds: data1.clouds.all,\r\n          humidity: data1.main.humidity,\r\n          wind: data1.wind.speed,\r\n          forecast: data2.list,\r\n        };\r\n\r\n        this.setState({\r\n          weatherInfo,\r\n          error: false,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n\r\n        this.setState({\r\n          weatherInfo: null,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { value, weatherInfo, error } = this.state;\r\n    return (\r\n      <div>\r\n        <AppTitle showLabel={(weatherInfo || error) && true}>Weather app</AppTitle>\r\n        <ContainerWrapper>\r\n          <AppTitle secondary showResult={(weatherInfo || error) && true}>\r\n            Weather app\r\n          </AppTitle>\r\n          <SearchCity\r\n            value={value}\r\n            showResult={(weatherInfo || error) && true}\r\n            submit={this.handleSearchCity}\r\n            change={this.handleInputChange}\r\n          />\r\n          {weatherInfo && <Result weather={weatherInfo} />}\r\n\r\n          {error && <NotFound error={error} />}\r\n        </ContainerWrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('weather-app'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}